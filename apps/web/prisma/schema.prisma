// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["darwin", "rhel-openssl-1.0.x"]
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Book          Book[]
  Import        Import[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Book {
  id                String      @id @default(cuid())
  author            String
  title             String
  importId          String
  totalHighlights   Int         @default(0)
  importedOn        DateTime    @default(now())
  lastHighlightedOn DateTime?
  userId            String
  user              User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  import            Import      @relation(fields: [importId], references: [id], onDelete: Cascade)
  highlights        Highlight[]
}

model Highlight {
  id            String    @id @default(cuid())
  content       String
  page          String?
  location      Int
  bookId        String
  highlightedOn DateTime?
  book          Book      @relation(fields: [bookId], references: [id], onDelete: Cascade)
}

model Import {
  id         String     @id @default(cuid())
  importId   String
  importedOn DateTime   @default(now())
  userId     String
  importType ImportType
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  Book       Book[]
}

enum ImportType {
  Manual
  Online
}
