import { type NextPage } from "next";
import Head from "next/head";

import { requireAuth } from "../../utils/requireAuth";
import BooksTable from "../../components/BooksTable";
import { getSession } from "next-auth/react";
import { prisma } from "../../server/db";
import { Book } from "@prisma/client";
import { Column } from "react-table";

export const getServerSideProps = requireAuth(async (ctx) => {
    const session = await getSession({ ctx });
    const books = await prisma.book.findMany({
        where: {
            userId: session?.user.id
        }
    });
    return {
        props: {
            books: books
        }
    }
}, 'books');

type Props = {
    books: Book[];
}

const columns: Column<any>[] = [
    {
        Header: 'Title',
        accessor: 'title'
    },
    {
        Header: 'Author',
        accessor: 'author'
    },
    {
        Header: 'Highlights',
        accessor: 'totalHighlights'
    },
    {
        Header: 'Last Highlight',
        accessor: 'lastHighlightedOn'
    }
];

const Books: NextPage<Props> = ({ books }) => {
    return (
        <>
            <Head>
                <title>Rekindled</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <h1 className="text-4xl font-bold">Books</h1>
                <div className="flex flex-col">
                    {
                        books.length > 0
                            ? <BooksTable columns={columns} data={books} />
                            : <p className="text-gray-500">No books found</p>
                    }
                </div>
            </main>
        </>
    );
};

export default Books;
